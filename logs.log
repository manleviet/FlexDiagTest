2022-02-21 11:41:27.500  INFO [main]                    az.ist.ase.cacdr.algorithms.hsdag.HSTree :    addItemToCSNodesMap [cs_nodesMap.size=0, cs=[Constraint 41-1 - m.arithm(dppm_vs_3, "<", dppm_vs_0).post();], node=Node{id=0, level=0, status=Open, label=[Constraint 41-1 - m.arithm(dppm_vs_3, "<", dppm_vs_0).post();], parameter=FlexDiagParameters{S=[Constraint 1 - dppm_vm_0.eq(dppm_vm_1).imp(dppm_vs_0.ne(dppm_vs_1)).post();, Constraint 2 - dppm_vm_0.eq(dppm_vm_2).imp(dppm_vs_0.ne(dppm_vs_2)).post();, Constraint 3 - dppm_vm_0.eq(dppm_vm_3).imp(dppm_vs_0.ne(dppm_vs_3)).post();, Constraint 4 - dppm_vm_0.eq(dppm_vm_4).imp(dppm_vs_0.ne(dppm_vs_4)).post();, Constraint 5 - dppm_vm_0.eq(dppm_vm_5).imp(dppm_vs_0.ne(dppm_vs_5)).post();, Constraint 6 - dppm_vm_0.eq(dppm_vm_6).imp(dppm_vs_0.ne(dppm_vs_6)).post();, Constraint 7 - dppm_vm_1.eq(dppm_vm_2).imp(dppm_vs_1.ne(dppm_vs_2)).post();, Constraint 8 - dppm_vm_1.eq(dppm_vm_3).imp(dppm_vs_1.ne(dppm_vs_3)).post();, Constraint 9 - dppm_vm_1.eq(dppm_vm_4).imp(dppm_vs_1.ne(dppm_vs_4)).post();, Constraint 10 - dppm_vm_1.eq(dppm_vm_5).imp(dppm_vs_1.ne(dppm_vs_5)).post();, Constraint 11 - dppm_vm_1.eq(dppm_vm_6).imp(dppm_vs_1.ne(dppm_vs_6)).post();, Constraint 12 - dppm_vm_2.eq(dppm_vm_3).imp(dppm_vs_2.ne(dppm_vs_3)).post();, Constraint 13 - dppm_vm_2.eq(dppm_vm_4).imp(dppm_vs_2.ne(dppm_vs_4)).post();, Constraint 14 - dppm_vm_2.eq(dppm_vm_5).imp(dppm_vs_2.ne(dppm_vs_5)).post();, Constraint 15 - dppm_vm_2.eq(dppm_vm_6).imp(dppm_vs_2.ne(dppm_vs_6)).post();, Constraint 16 - dppm_vm_3.eq(dppm_vm_4).imp(dppm_vs_3.ne(dppm_vs_4)).post();, Constraint 17 - dppm_vm_3.eq(dppm_vm_5).imp(dppm_vs_3.ne(dppm_vs_5)).post();, Constraint 18 - dppm_vm_3.eq(dppm_vm_6).imp(dppm_vs_3.ne(dppm_vs_6)).post();, Constraint 19 - dppm_vm_4.eq(dppm_vm_5).imp(dppm_vs_4.ne(dppm_vs_5)).post();, Constraint 20 - dppm_vm_4.eq(dppm_vm_6).imp(dppm_vs_4.ne(dppm_vs_6)).post();, Constraint 21 - dppm_vm_5.eq(dppm_vm_6).imp(dppm_vs_5.ne(dppm_vs_6)).post();, Constraint 22 - dppm_vs_0.ne(dppm_vs_1).post();, Constraint 23 - dppm_vs_0.ne(dppm_vs_2).post();, Constraint 24 - dppm_vs_0.ne(dppm_vs_3).post();, Constraint 25 - dppm_vs_0.ne(dppm_vs_4).post();, Constraint 26 - dppm_vs_0.ne(dppm_vs_5).post();, Constraint 27 - dppm_vs_1.ne(dppm_vs_2).post();, Constraint 28 - dppm_vs_1.ne(dppm_vs_3).post();, Constraint 29 - dppm_vs_1.ne(dppm_vs_4).post();, Constraint 30 - dppm_vs_1.ne(dppm_vs_5).post();, Constraint 31 - dppm_vs_2.ne(dppm_vs_3).post();, Constraint 32 - dppm_vs_2.ne(dppm_vs_4).post();, Constraint 33 - dppm_vs_2.ne(dppm_vs_5).post();, Constraint 34 - dppm_vs_3.ne(dppm_vs_4).post();, Constraint 35 - dppm_vs_3.ne(dppm_vs_5).post();, Constraint 36 - dppm_vs_4.ne(dppm_vs_5).post();, Constraint 37 - m.arithm(dppm_vs_0, "<", dppm_vs_1).post();, Constraint 38 - m.arithm(dppm_vs_0, "<", dppm_vs_2).post();, Constraint 39 - m.arithm(dppm_vs_0, "<", dppm_vs_3).post();, Constraint 40 - m.arithm(dppm_vs_0, "<", dppm_vs_4).post();, Constraint 41 - m.arithm(dppm_vs_0, "<", dppm_vs_5).post();, Constraint 41-1 - m.arithm(dppm_vs_3, "<", dppm_vs_0).post();, Constraint 42 - m.arithm(dppm_vs_1, "<", dppm_vs_6).post();, Constraint 43 - m.arithm(dppm_vs_2, "<", dppm_vs_6).post();, Constraint 44 - m.arithm(dppm_vs_3, "<", dppm_vs_6).post();, Constraint 45 - m.arithm(dppm_vs_4, "<", dppm_vs_6).post();, Constraint 46 - m.arithm(dppm_vs_5, "<", dppm_vs_6).post();, Constraint 47 - m.element(v_tmp_1, new int[]{0,0,0,0}, dppm_vm_2).post();, Constraint 48 - m.or(new Constraint[]{m.not(m.and(new Constraint[]{m.arithm(dppm_vs_1, "<", dppm_vs_2), m.arithm(dppm_vs_3, "<", dppm_vs_2)})), m.arithm(v_tmp_1, "=", 1)}).post();, Constraint 49 - m.element(v_tmp_2, new int[]{0,0,0,0}, dppm_vm_3).post();, Constraint 50 - m.or(new Constraint[]{m.not(m.and(new Constraint[]{m.arithm(dppm_vs_2, "<", dppm_vs_3), m.arithm(dppm_vs_4, "<", dppm_vs_3)})), m.arithm(v_tmp_2, "=", 1)}).post();, Constraint 51 - m.element(v_tmp_3, new int[]{0,0,0,0}, dppm_vm_4).post();, Constraint 52 - m.or(new Constraint[]{m.not(m.and(new Constraint[]{m.arithm(dppm_vs_3, "<", dppm_vs_4), m.arithm(dppm_vs_5, "<", dppm_vs_4)})), m.arithm(v_tmp_3, "=", 1)}).post();, Constraint 53 - m.max(dppm_vmakespan, vs_array).post();, Constraint 54 - dppm_vmakespan.le(5).post();], AC=[Constraint 1 - dppm_vm_0.eq(dppm_vm_1).imp(dppm_vs_0.ne(dppm_vs_1)).post();, Constraint 2 - dppm_vm_0.eq(dppm_vm_2).imp(dppm_vs_0.ne(dppm_vs_2)).post();, Constraint 3 - dppm_vm_0.eq(dppm_vm_3).imp(dppm_vs_0.ne(dppm_vs_3)).post();, Constraint 4 - dppm_vm_0.eq(dppm_vm_4).imp(dppm_vs_0.ne(dppm_vs_4)).post();, Constraint 5 - dppm_vm_0.eq(dppm_vm_5).imp(dppm_vs_0.ne(dppm_vs_5)).post();, Constraint 6 - dppm_vm_0.eq(dppm_vm_6).imp(dppm_vs_0.ne(dppm_vs_6)).post();, Constraint 7 - dppm_vm_1.eq(dppm_vm_2).imp(dppm_vs_1.ne(dppm_vs_2)).post();, Constraint 8 - dppm_vm_1.eq(dppm_vm_3).imp(dppm_vs_1.ne(dppm_vs_3)).post();, Constraint 9 - dppm_vm_1.eq(dppm_vm_4).imp(dppm_vs_1.ne(dppm_vs_4)).post();, Constraint 10 - dppm_vm_1.eq(dppm_vm_5).imp(dppm_vs_1.ne(dppm_vs_5)).post();, Constraint 11 - dppm_vm_1.eq(dppm_vm_6).imp(dppm_vs_1.ne(dppm_vs_6)).post();, Constraint 12 - dppm_vm_2.eq(dppm_vm_3).imp(dppm_vs_2.ne(dppm_vs_3)).post();, Constraint 13 - dppm_vm_2.eq(dppm_vm_4).imp(dppm_vs_2.ne(dppm_vs_4)).post();, Constraint 14 - dppm_vm_2.eq(dppm_vm_5).imp(dppm_vs_2.ne(dppm_vs_5)).post();, Constraint 15 - dppm_vm_2.eq(dppm_vm_6).imp(dppm_vs_2.ne(dppm_vs_6)).post();, Constraint 16 - dppm_vm_3.eq(dppm_vm_4).imp(dppm_vs_3.ne(dppm_vs_4)).post();, Constraint 17 - dppm_vm_3.eq(dppm_vm_5).imp(dppm_vs_3.ne(dppm_vs_5)).post();, Constraint 18 - dppm_vm_3.eq(dppm_vm_6).imp(dppm_vs_3.ne(dppm_vs_6)).post();, Constraint 19 - dppm_vm_4.eq(dppm_vm_5).imp(dppm_vs_4.ne(dppm_vs_5)).post();, Constraint 20 - dppm_vm_4.eq(dppm_vm_6).imp(dppm_vs_4.ne(dppm_vs_6)).post();, Constraint 21 - dppm_vm_5.eq(dppm_vm_6).imp(dppm_vs_5.ne(dppm_vs_6)).post();, Constraint 22 - dppm_vs_0.ne(dppm_vs_1).post();, Constraint 23 - dppm_vs_0.ne(dppm_vs_2).post();, Constraint 24 - dppm_vs_0.ne(dppm_vs_3).post();, Constraint 25 - dppm_vs_0.ne(dppm_vs_4).post();, Constraint 26 - dppm_vs_0.ne(dppm_vs_5).post();, Constraint 27 - dppm_vs_1.ne(dppm_vs_2).post();, Constraint 28 - dppm_vs_1.ne(dppm_vs_3).post();, Constraint 29 - dppm_vs_1.ne(dppm_vs_4).post();, Constraint 30 - dppm_vs_1.ne(dppm_vs_5).post();, Constraint 31 - dppm_vs_2.ne(dppm_vs_3).post();, Constraint 32 - dppm_vs_2.ne(dppm_vs_4).post();, Constraint 33 - dppm_vs_2.ne(dppm_vs_5).post();, Constraint 34 - dppm_vs_3.ne(dppm_vs_4).post();, Constraint 35 - dppm_vs_3.ne(dppm_vs_5).post();, Constraint 36 - dppm_vs_4.ne(dppm_vs_5).post();, Constraint 37 - m.arithm(dppm_vs_0, "<", dppm_vs_1).post();, Constraint 38 - m.arithm(dppm_vs_0, "<", dppm_vs_2).post();, Constraint 39 - m.arithm(dppm_vs_0, "<", dppm_vs_3).post();, Constraint 40 - m.arithm(dppm_vs_0, "<", dppm_vs_4).post();, Constraint 41 - m.arithm(dppm_vs_0, "<", dppm_vs_5).post();, Constraint 41-1 - m.arithm(dppm_vs_3, "<", dppm_vs_0).post();, Constraint 42 - m.arithm(dppm_vs_1, "<", dppm_vs_6).post();, Constraint 43 - m.arithm(dppm_vs_2, "<", dppm_vs_6).post();, Constraint 44 - m.arithm(dppm_vs_3, "<", dppm_vs_6).post();, Constraint 45 - m.arithm(dppm_vs_4, "<", dppm_vs_6).post();, Constraint 46 - m.arithm(dppm_vs_5, "<", dppm_vs_6).post();, Constraint 47 - m.element(v_tmp_1, new int[]{0,0,0,0}, dppm_vm_2).post();, Constraint 48 - m.or(new Constraint[]{m.not(m.and(new Constraint[]{m.arithm(dppm_vs_1, "<", dppm_vs_2), m.arithm(dppm_vs_3, "<", dppm_vs_2)})), m.arithm(v_tmp_1, "=", 1)}).post();, Constraint 49 - m.element(v_tmp_2, new int[]{0,0,0,0}, dppm_vm_3).post();, Constraint 50 - m.or(new Constraint[]{m.not(m.and(new Constraint[]{m.arithm(dppm_vs_2, "<", dppm_vs_3), m.arithm(dppm_vs_4, "<", dppm_vs_3)})), m.arithm(v_tmp_2, "=", 1)}).post();, Constraint 51 - m.element(v_tmp_3, new int[]{0,0,0,0}, dppm_vm_4).post();, Constraint 52 - m.or(new Constraint[]{m.not(m.and(new Constraint[]{m.arithm(dppm_vs_3, "<", dppm_vs_4), m.arithm(dppm_vs_5, "<", dppm_vs_4)})), m.arithm(v_tmp_3, "=", 1)}).post();, Constraint 53 - m.max(dppm_vmakespan, vs_array).post();, Constraint 54 - dppm_vmakespan.le(5).post();], m=1}, arcLabel=null, pathLabels=[]}]
2022-02-21 11:41:27.509  INFO [main]                    az.ist.ase.cacdr.algorithms.hsdag.HSTree :       Add new item
2022-02-21 11:41:27.509  INFO [main]                    az.ist.ase.cacdr.algorithms.hsdag.HSTree :       Updated [cs_nodesMap.size=1]
2022-02-21 11:41:27.514  INFO [main]                    az.ist.ase.cacdr.algorithms.hsdag.HSTree :       addItemToCSNodesMap [cs_nodesMap.size=1, cs=[Constraint 39 - m.arithm(dppm_vs_0, "<", dppm_vs_3).post();], node=Node{id=1, level=1, status=Open, label=[Constraint 39 - m.arithm(dppm_vs_0, "<", dppm_vs_3).post();], parameter=FlexDiagParameters{S=[Constraint 1 - dppm_vm_0.eq(dppm_vm_1).imp(dppm_vs_0.ne(dppm_vs_1)).post();, Constraint 2 - dppm_vm_0.eq(dppm_vm_2).imp(dppm_vs_0.ne(dppm_vs_2)).post();, Constraint 3 - dppm_vm_0.eq(dppm_vm_3).imp(dppm_vs_0.ne(dppm_vs_3)).post();, Constraint 4 - dppm_vm_0.eq(dppm_vm_4).imp(dppm_vs_0.ne(dppm_vs_4)).post();, Constraint 5 - dppm_vm_0.eq(dppm_vm_5).imp(dppm_vs_0.ne(dppm_vs_5)).post();, Constraint 6 - dppm_vm_0.eq(dppm_vm_6).imp(dppm_vs_0.ne(dppm_vs_6)).post();, Constraint 7 - dppm_vm_1.eq(dppm_vm_2).imp(dppm_vs_1.ne(dppm_vs_2)).post();, Constraint 8 - dppm_vm_1.eq(dppm_vm_3).imp(dppm_vs_1.ne(dppm_vs_3)).post();, Constraint 9 - dppm_vm_1.eq(dppm_vm_4).imp(dppm_vs_1.ne(dppm_vs_4)).post();, Constraint 10 - dppm_vm_1.eq(dppm_vm_5).imp(dppm_vs_1.ne(dppm_vs_5)).post();, Constraint 11 - dppm_vm_1.eq(dppm_vm_6).imp(dppm_vs_1.ne(dppm_vs_6)).post();, Constraint 12 - dppm_vm_2.eq(dppm_vm_3).imp(dppm_vs_2.ne(dppm_vs_3)).post();, Constraint 13 - dppm_vm_2.eq(dppm_vm_4).imp(dppm_vs_2.ne(dppm_vs_4)).post();, Constraint 14 - dppm_vm_2.eq(dppm_vm_5).imp(dppm_vs_2.ne(dppm_vs_5)).post();, Constraint 15 - dppm_vm_2.eq(dppm_vm_6).imp(dppm_vs_2.ne(dppm_vs_6)).post();, Constraint 16 - dppm_vm_3.eq(dppm_vm_4).imp(dppm_vs_3.ne(dppm_vs_4)).post();, Constraint 17 - dppm_vm_3.eq(dppm_vm_5).imp(dppm_vs_3.ne(dppm_vs_5)).post();, Constraint 18 - dppm_vm_3.eq(dppm_vm_6).imp(dppm_vs_3.ne(dppm_vs_6)).post();, Constraint 19 - dppm_vm_4.eq(dppm_vm_5).imp(dppm_vs_4.ne(dppm_vs_5)).post();, Constraint 20 - dppm_vm_4.eq(dppm_vm_6).imp(dppm_vs_4.ne(dppm_vs_6)).post();, Constraint 21 - dppm_vm_5.eq(dppm_vm_6).imp(dppm_vs_5.ne(dppm_vs_6)).post();, Constraint 22 - dppm_vs_0.ne(dppm_vs_1).post();, Constraint 23 - dppm_vs_0.ne(dppm_vs_2).post();, Constraint 24 - dppm_vs_0.ne(dppm_vs_3).post();, Constraint 25 - dppm_vs_0.ne(dppm_vs_4).post();, Constraint 26 - dppm_vs_0.ne(dppm_vs_5).post();, Constraint 27 - dppm_vs_1.ne(dppm_vs_2).post();, Constraint 28 - dppm_vs_1.ne(dppm_vs_3).post();, Constraint 29 - dppm_vs_1.ne(dppm_vs_4).post();, Constraint 30 - dppm_vs_1.ne(dppm_vs_5).post();, Constraint 31 - dppm_vs_2.ne(dppm_vs_3).post();, Constraint 32 - dppm_vs_2.ne(dppm_vs_4).post();, Constraint 33 - dppm_vs_2.ne(dppm_vs_5).post();, Constraint 34 - dppm_vs_3.ne(dppm_vs_4).post();, Constraint 35 - dppm_vs_3.ne(dppm_vs_5).post();, Constraint 36 - dppm_vs_4.ne(dppm_vs_5).post();, Constraint 37 - m.arithm(dppm_vs_0, "<", dppm_vs_1).post();, Constraint 38 - m.arithm(dppm_vs_0, "<", dppm_vs_2).post();, Constraint 39 - m.arithm(dppm_vs_0, "<", dppm_vs_3).post();, Constraint 40 - m.arithm(dppm_vs_0, "<", dppm_vs_4).post();, Constraint 41 - m.arithm(dppm_vs_0, "<", dppm_vs_5).post();, Constraint 42 - m.arithm(dppm_vs_1, "<", dppm_vs_6).post();, Constraint 43 - m.arithm(dppm_vs_2, "<", dppm_vs_6).post();, Constraint 44 - m.arithm(dppm_vs_3, "<", dppm_vs_6).post();, Constraint 45 - m.arithm(dppm_vs_4, "<", dppm_vs_6).post();, Constraint 46 - m.arithm(dppm_vs_5, "<", dppm_vs_6).post();, Constraint 47 - m.element(v_tmp_1, new int[]{0,0,0,0}, dppm_vm_2).post();, Constraint 48 - m.or(new Constraint[]{m.not(m.and(new Constraint[]{m.arithm(dppm_vs_1, "<", dppm_vs_2), m.arithm(dppm_vs_3, "<", dppm_vs_2)})), m.arithm(v_tmp_1, "=", 1)}).post();, Constraint 49 - m.element(v_tmp_2, new int[]{0,0,0,0}, dppm_vm_3).post();, Constraint 50 - m.or(new Constraint[]{m.not(m.and(new Constraint[]{m.arithm(dppm_vs_2, "<", dppm_vs_3), m.arithm(dppm_vs_4, "<", dppm_vs_3)})), m.arithm(v_tmp_2, "=", 1)}).post();, Constraint 51 - m.element(v_tmp_3, new int[]{0,0,0,0}, dppm_vm_4).post();, Constraint 52 - m.or(new Constraint[]{m.not(m.and(new Constraint[]{m.arithm(dppm_vs_3, "<", dppm_vs_4), m.arithm(dppm_vs_5, "<", dppm_vs_4)})), m.arithm(v_tmp_3, "=", 1)}).post();, Constraint 53 - m.max(dppm_vmakespan, vs_array).post();, Constraint 54 - dppm_vmakespan.le(5).post();], AC=[Constraint 1 - dppm_vm_0.eq(dppm_vm_1).imp(dppm_vs_0.ne(dppm_vs_1)).post();, Constraint 2 - dppm_vm_0.eq(dppm_vm_2).imp(dppm_vs_0.ne(dppm_vs_2)).post();, Constraint 3 - dppm_vm_0.eq(dppm_vm_3).imp(dppm_vs_0.ne(dppm_vs_3)).post();, Constraint 4 - dppm_vm_0.eq(dppm_vm_4).imp(dppm_vs_0.ne(dppm_vs_4)).post();, Constraint 5 - dppm_vm_0.eq(dppm_vm_5).imp(dppm_vs_0.ne(dppm_vs_5)).post();, Constraint 6 - dppm_vm_0.eq(dppm_vm_6).imp(dppm_vs_0.ne(dppm_vs_6)).post();, Constraint 7 - dppm_vm_1.eq(dppm_vm_2).imp(dppm_vs_1.ne(dppm_vs_2)).post();, Constraint 8 - dppm_vm_1.eq(dppm_vm_3).imp(dppm_vs_1.ne(dppm_vs_3)).post();, Constraint 9 - dppm_vm_1.eq(dppm_vm_4).imp(dppm_vs_1.ne(dppm_vs_4)).post();, Constraint 10 - dppm_vm_1.eq(dppm_vm_5).imp(dppm_vs_1.ne(dppm_vs_5)).post();, Constraint 11 - dppm_vm_1.eq(dppm_vm_6).imp(dppm_vs_1.ne(dppm_vs_6)).post();, Constraint 12 - dppm_vm_2.eq(dppm_vm_3).imp(dppm_vs_2.ne(dppm_vs_3)).post();, Constraint 13 - dppm_vm_2.eq(dppm_vm_4).imp(dppm_vs_2.ne(dppm_vs_4)).post();, Constraint 14 - dppm_vm_2.eq(dppm_vm_5).imp(dppm_vs_2.ne(dppm_vs_5)).post();, Constraint 15 - dppm_vm_2.eq(dppm_vm_6).imp(dppm_vs_2.ne(dppm_vs_6)).post();, Constraint 16 - dppm_vm_3.eq(dppm_vm_4).imp(dppm_vs_3.ne(dppm_vs_4)).post();, Constraint 17 - dppm_vm_3.eq(dppm_vm_5).imp(dppm_vs_3.ne(dppm_vs_5)).post();, Constraint 18 - dppm_vm_3.eq(dppm_vm_6).imp(dppm_vs_3.ne(dppm_vs_6)).post();, Constraint 19 - dppm_vm_4.eq(dppm_vm_5).imp(dppm_vs_4.ne(dppm_vs_5)).post();, Constraint 20 - dppm_vm_4.eq(dppm_vm_6).imp(dppm_vs_4.ne(dppm_vs_6)).post();, Constraint 21 - dppm_vm_5.eq(dppm_vm_6).imp(dppm_vs_5.ne(dppm_vs_6)).post();, Constraint 22 - dppm_vs_0.ne(dppm_vs_1).post();, Constraint 23 - dppm_vs_0.ne(dppm_vs_2).post();, Constraint 24 - dppm_vs_0.ne(dppm_vs_3).post();, Constraint 25 - dppm_vs_0.ne(dppm_vs_4).post();, Constraint 26 - dppm_vs_0.ne(dppm_vs_5).post();, Constraint 27 - dppm_vs_1.ne(dppm_vs_2).post();, Constraint 28 - dppm_vs_1.ne(dppm_vs_3).post();, Constraint 29 - dppm_vs_1.ne(dppm_vs_4).post();, Constraint 30 - dppm_vs_1.ne(dppm_vs_5).post();, Constraint 31 - dppm_vs_2.ne(dppm_vs_3).post();, Constraint 32 - dppm_vs_2.ne(dppm_vs_4).post();, Constraint 33 - dppm_vs_2.ne(dppm_vs_5).post();, Constraint 34 - dppm_vs_3.ne(dppm_vs_4).post();, Constraint 35 - dppm_vs_3.ne(dppm_vs_5).post();, Constraint 36 - dppm_vs_4.ne(dppm_vs_5).post();, Constraint 37 - m.arithm(dppm_vs_0, "<", dppm_vs_1).post();, Constraint 38 - m.arithm(dppm_vs_0, "<", dppm_vs_2).post();, Constraint 39 - m.arithm(dppm_vs_0, "<", dppm_vs_3).post();, Constraint 40 - m.arithm(dppm_vs_0, "<", dppm_vs_4).post();, Constraint 41 - m.arithm(dppm_vs_0, "<", dppm_vs_5).post();, Constraint 41-1 - m.arithm(dppm_vs_3, "<", dppm_vs_0).post();, Constraint 42 - m.arithm(dppm_vs_1, "<", dppm_vs_6).post();, Constraint 43 - m.arithm(dppm_vs_2, "<", dppm_vs_6).post();, Constraint 44 - m.arithm(dppm_vs_3, "<", dppm_vs_6).post();, Constraint 45 - m.arithm(dppm_vs_4, "<", dppm_vs_6).post();, Constraint 46 - m.arithm(dppm_vs_5, "<", dppm_vs_6).post();, Constraint 47 - m.element(v_tmp_1, new int[]{0,0,0,0}, dppm_vm_2).post();, Constraint 48 - m.or(new Constraint[]{m.not(m.and(new Constraint[]{m.arithm(dppm_vs_1, "<", dppm_vs_2), m.arithm(dppm_vs_3, "<", dppm_vs_2)})), m.arithm(v_tmp_1, "=", 1)}).post();, Constraint 49 - m.element(v_tmp_2, new int[]{0,0,0,0}, dppm_vm_3).post();, Constraint 50 - m.or(new Constraint[]{m.not(m.and(new Constraint[]{m.arithm(dppm_vs_2, "<", dppm_vs_3), m.arithm(dppm_vs_4, "<", dppm_vs_3)})), m.arithm(v_tmp_2, "=", 1)}).post();, Constraint 51 - m.element(v_tmp_3, new int[]{0,0,0,0}, dppm_vm_4).post();, Constraint 52 - m.or(new Constraint[]{m.not(m.and(new Constraint[]{m.arithm(dppm_vs_3, "<", dppm_vs_4), m.arithm(dppm_vs_5, "<", dppm_vs_4)})), m.arithm(v_tmp_3, "=", 1)}).post();, Constraint 53 - m.max(dppm_vmakespan, vs_array).post();, Constraint 54 - dppm_vmakespan.le(5).post();], m=1}, arcLabel=Constraint 41-1 - m.arithm(dppm_vs_3, "<", dppm_vs_0).post();, pathLabels=[Constraint 41-1 - m.arithm(dppm_vs_3, "<", dppm_vs_0).post();]}]
2022-02-21 11:41:27.514  INFO [main]                    az.ist.ase.cacdr.algorithms.hsdag.HSTree :          Add new item
2022-02-21 11:41:27.514  INFO [main]                    az.ist.ase.cacdr.algorithms.hsdag.HSTree :          Updated [cs_nodesMap.size=2]
